package com.ricoh.paypal.config;import com.paypal.base.rest.APIContext;import com.paypal.base.rest.OAuthTokenCredential;import com.paypal.base.rest.PayPalRESTException;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import java.util.HashMap;import java.util.Map;/** * @author xionglijing * @date 2021/9/26 17:14 * @description */@Configurationpublic class PaypalConfig{    @Value("${paypal.client.app:Afzqmhi2lmiSfAJNepA0CzjNv9W1NhSw4D_PBc8giHX8x2vcbBAlejMD-1S-irLgT9ZW4QCnm7hPxa1r}")    private String clientId;    @Value("${paypal.client.secret:EFY2AelapC2V3a2J0UyABW0uoxGLJTI_3Yzwv-KA7ZpfCQwdX8cOCd51FfzgAENSaLzoxcZqAVtlcwR1}")    private String clientSecret;    @Value("${paypal.mode}")    private String mode;    @Bean    public Map<String, String> paypalSdkConfig(){        Map<String, String> sdkConfig = new HashMap<>();        sdkConfig.put("mode", mode);        return sdkConfig;    }    @Bean    public OAuthTokenCredential authTokenCredential(){        return new OAuthTokenCredential(clientId, clientSecret, paypalSdkConfig());    }    @Bean    public APIContext apiContext() throws PayPalRESTException {        APIContext apiContext = new APIContext(authTokenCredential().getAccessToken());        apiContext.setConfigurationMap(paypalSdkConfig());        return apiContext;    }}